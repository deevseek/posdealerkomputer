# ðŸš€ Prompt Replit: Aplikasi POS Service Laptop & Penjualan dengan Manajemen Keuangan
# Bahasa: JavaScript (Node.js + Express)
# Database: PostgreSQL (bukan dummy, data real)
# Frontend: React (Next.js/Tailwind, opsional)

# ==============================
# 1. Install Dependencies
# ==============================
npm init -y
npm install express pg sequelize cors dotenv bcrypt jsonwebtoken body-parser
npm install --save-dev nodemon
# Jika pakai frontend: npx create-next-app client && cd client && npm install axios tailwindcss

# ==============================
# 2. Struktur Folder
# ==============================
/server
  /models      -> Sequelize models
  /routes      -> API endpoints
  /controllers -> Logic tiap fitur
  /middleware  -> Auth & Role
  config.js    -> DB connection
  server.js    -> Main app

# ==============================
# 3. Fitur Utama (urut sesuai alur)
# ==============================

## ðŸ”¹ MANAGEMENT USER & ROLE
- [x] Register user baru
- [x] Login & Logout (JWT)
- [x] Role: Admin, Kasir, Teknisi, Purchasing, Finance, Owner
- [x] Hak akses berdasarkan role (middleware auth)
- [x] CRUD User oleh Admin/Owner
- [x] Ganti password / reset password

## ðŸ”¹ PENGATURAN TOKO
- [x] Informasi toko (nama, alamat, logo, kontak)
- [x] Pajak default (%), diskon default (%)
- [x] Metode pembayaran (Tunai, Transfer, QRIS, Cicilan)
- [x] Backup & restore database
- [x] Multi-toko (opsional, untuk cabang)

## ðŸ”¹ MASTER DATA
- [x] Produk (laptop, sparepart, aksesoris)
- [x] Supplier
- [x] Pelanggan
- [x] Karyawan (linked dengan user & role)

## ðŸ”¹ MANAJEMEN STOK
- [x] CRUD Produk & Kategori
- [x] Gudang utama & sub-gudang
- [x] Stok masuk (pembelian, retur pelanggan, adjustment)
- [x] Stok keluar (penjualan, retur ke supplier, service)
- [x] Stok minimum alert
- [x] Barcode scanner support
- [x] Laporan mutasi stok (FIFO/LIFO opsional)

## ðŸ”¹ SERVICE LAPTOP
- [x] Input data pelanggan + detail perangkat
- [x] Estimasi biaya & waktu pengerjaan
- [x] Status service (Pending, Proses, Selesai, Diambil)
- [x] Nota service (PDF/print)

## ðŸ”¹ POS (Penjualan)
- [x] Transaksi penjualan produk & jasa service
- [x] Multi-payment (Tunai, Transfer, QRIS, Cicilan)
- [x] Pajak & Diskon otomatis
- [x] Cetak struk

## ðŸ”¹ PURCHASING (Pembelian)
- [x] Catat pembelian ke supplier
- [x] Auto update stok masuk
- [x] Invoice pembelian
- [x] Laporan pembelian

## ðŸ”¹ RETURN (Retur)
- [x] Retur pelanggan (stok otomatis bertambah)
- [x] Retur supplier (stok otomatis berkurang)
- [x] Catat alasan retur
- [x] Laporan retur

## ðŸ”¹ MANAJEMEN KEUANGAN
- [x] Kas masuk & kas keluar
- [x] Laporan laba/rugi
- [x] Arus kas (cashflow)
- [x] Jurnal keuangan (debit/kredit)
- [x] Export laporan ke Excel/CSV

## ðŸ”¹ PAYROLL (Penggajian)
- [x] Data karyawan (jabatan, gaji, tunjangan, potongan)
- [x] Hitung gaji bulanan otomatis
- [x] Slip gaji PDF
- [x] Laporan payroll

## ðŸ”¹ DASHBOARD & LAPORAN
- [x] Ringkasan penjualan, service, pembelian, retur, payroll
- [x] Grafik cashflow, laba/rugi, pergerakan stok
- [x] Statistik pelanggan, produk terlaris, supplier terbaik

# ==============================
# 4. Menjalankan Server
# ==============================
"scripts": {
  "dev": "nodemon server.js"
}

# Run
npm run dev

# ==============================
# 5. Catatan
# ==============================
- Gunakan PostgreSQL asli, buat database misalnya: `pos_laptop`
- Simpan credential di `.env`
- Semua fitur akan dibuat modular: routes â†’ controllers â†’ models
- Role-based access: JWT + Middleware
- Frontend opsional, bisa langsung pakai API via Postman dulu